name: Laravel Lint and Test

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          extensions: gmp gmp-dev bc-math

      - name: Cache Composer packages
        id: composer_cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install Composer Dependencies
        if: ${{ steps.composer_cache.outputs.cache-hit != 'true' }}
        run: composer install --no-ansi --no-interaction --no-progress --prefer-dist

      - name: Cache PHP CS Fixer
        uses: actions/cache@v3
        with:
          path: .php-cs-fixer.cache
          key: ${{ runner.os }}-php-cs-fixer-${{ hashFiles('**/.php-cs-fixer.dist.php') }}
          restore-keys: |
            ${{ runner.os }}-php-cs-fixer-

      - name: Check Lint
        run: composer run lint

  test:
    name: Build and Test
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0.19
        ports:
          - 3306:3306
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          MYSQL_DATABASE: ${{ secrets.DB_DATABASE }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASSWORD }}

    env:
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_CONNECTION: ${{ secrets.DB_CONNECTION }}
      DB_DATABASE: ${{ secrets.DB_DATABASE }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

    steps:
      - uses: actions/checkout@v3
      - uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          extensions: gmp gmp-dev bc-math

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Cache Composer packages
        id: composer_cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install Composer Dependencies
        if: ${{ steps.composer_cache.outputs.cache-hit != 'true' }}
        run: composer install --no-ansi --no-interaction --no-progress --prefer-dist

      - name: Generate key
        run: php artisan key:generate

      - name: Wait for MySQL
        run: |
          while ! mysqladmin ping --host=$DB_HOST --password=$MYSQL_ROOT_PASSWORD --silent; do
            sleep 1
          done

      - name: DB Migration
        run: php artisan migrate

      - name: DB Seeding Test
        run: php artisan db:seed

      - name: Execute tests (Unit and Feature tests) via PHPUnit
        run: composer run test
